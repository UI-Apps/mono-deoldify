name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

env:
  PROJECT_PATH: 'project'
  RELEASE_PATH: 'project/release'
  RELEASE_FILENAME: 'deoldify.exe'

jobs:
  build-project:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: build project
        run: |
          cd "$PROJECT_PATH"
          bash compile.sh
        
      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: program
          path: '${{ env.RELEASE_PATH }}/${{ env.RELEASE_FILENAME }}'
          retention-days: 1
  
  lint-markdown-code:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: lint markdown code
        run: |
          shopt -s globstar
          npm install -g markdownlint-cli
          markdownlint **/*.md

  lint-shell-code:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: lint shell code
        run: |
          shopt -s globstar
          sudo apt-get install shellcheck
          shellcheck **/*.sh

  lint-csharp-code:
    runs-on: ubuntu-latest
    needs: build-project

    steps:
      - uses: actions/checkout@v2

      - name: download artifacts
        uses: actions/download-artifact@v2
        with:
          name: program
      
      - name: lint csharp code
        if: always()
        run: |
          sudo apt-get install gendarme
          gendarme -- "$RELEASE_PATH.exe"
